#!/bin/bash

get_opts() {
  if [ -z "$1" ]; then
    echo "Empty list of options" >&2
    exit 1
  fi

  while getopts ":li:" option; do
    case $option in
      l)
        light=true
        ;;
      i)
        image=$OPTARG
        ;;
      \?)
        echo "Invalid option: -${OPTARG}" >&2
        exit 1
        ;;
    esac
  done
}

set_wallpaper() {
  /usr/libexec/PlistBuddy -c "set AllSpacesAndDisplays:Desktop:Content:Choices:0:Files:0:relative file:///$image" ~/Library/Application\ Support/com.apple.wallpaper/Store/Index.plist
  pkill -f WallpaperAgent &
}

generate_colorscheme() {
  if [ $light = true ]; then
    osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to false'
    matugen image "$image" --mode light
    pywalfox light
  else
    osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to true'
    matugen image "$image" --mode dark
    pywalfox dark
  fi

  wal -n -s --theme "$HOME/.config/wal/colorschemes/dark/matugen.json"
}

reload_apps() {
  walogram -i "$image" &
  pywalfox update &
  spicetify apply -n &
}

main() {
  light=false
  image=""

  get_opts "$@"
  set_wallpaper
  generate_colorscheme
  reload_apps

  magick "$image" -gravity Center -extent 8:10 "$HOME/.config/fastfetch/logo.png" &
  # magick -size 800x1000 xc:none -draw "roundrectangle 0,0,800,1000,100,100" mask.png
  # magick "$image" -gravity Center -extent 8:10 -resize 800x1000 -alpha set mask.png \
  #   -compose DstIn -composite "$HOME/.config/fastfetch/logo.png"
  # rm mask.png

  wait
}

main "$@"
